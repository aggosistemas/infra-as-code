name: Provisionar VM GCP com Backend S3

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Ação do Terraform (apply/destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: Executar Terraform
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      TF_WORKING_DIR: backstage/gcp/vm-gcp
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar credenciais AWS (para backend S3)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # Mesma região do bucket S3

      - name: Configurar autenticação GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false

      - name: Inicializar Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      - name: Executar ação do Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform plan -input=false
            terraform apply -auto-approve -input=false
          else
            terraform destroy -auto-approve -input=false
          fi