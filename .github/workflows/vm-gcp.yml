name: Provisionar VM na GCP

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Escolha a ação a ser executada: apply ou destroy"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
      branch:
        description: "Branch do projeto que contém os arquivos Terraform"
        required: true
        default: "main"

env:
  TF_WORKING_DIR: backstage/gcp/vm-gcp
  GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-key.json

jobs:
  terraform:
    name: Executar Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Configurar chave GCP
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > $GOOGLE_APPLICATION_CREDENTIALS

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configurar AWS (S3 Backend)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Credenciais AWS configuradas para backend remoto"

      - name: Inicializar Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Validar Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: Executar Terraform Plan
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan

      - name: Aplicar Terraform (Apply)
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve

      - name: Destruir Infraestrutura (Destroy)
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform destroy -auto-approve

      - name: Exibir Outputs do Terraform
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform output
