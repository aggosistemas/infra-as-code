name: Terraform Azure VM

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Escolha a ação: apply (criar) ou destroy (remover)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: Provisionar VM na Azure
    runs-on: ubuntu-latest

    env:
      TF_WORKING_DIR: backstage/azure/vm
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Inicializar Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false -no-color

      - name: Validar configuração
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate -no-color

      - name: Aplicar (apply)
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply -auto-approve -input=false -no-color \
            -var="admin_password=${{ secrets.ADMIN_PASSWORD }}"

      - name: Destruir (destroy)
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform destroy -auto-approve -input=false -no-color \
            -var="admin_password=${{ secrets.ADMIN_PASSWORD }}"
