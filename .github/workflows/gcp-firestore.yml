name: Terraform Firestore Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Escolha a ação a ser executada"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: Executar Terraform no Firestore
    runs-on: ubuntu-latest

    env:
      GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar autenticação com GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Inicializar Terraform
        working-directory: backstage/gcp/firestore
        run: terraform init

      - name: Validar Terraform
        working-directory: backstage/gcp/firestore
        run: terraform validate

      - name: Executar Terraform Plan
        working-directory: backstage/gcp/firestore
        run: terraform plan -var="gcp_project_id=${{ env.GOOGLE_PROJECT }}" -var="gcp_region=us-central1"

      - name: Executar Terraform Apply ou Destroy
        if: github.event.inputs.action == 'apply'
        working-directory: backstage/gcp/firestore
        run: terraform apply -auto-approve -var="gcp_project_id=${{ env.GOOGLE_PROJECT }}" -var="gcp_region=us-central1"

      - name: Executar Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: backstage/gcp/firestore
        run: terraform destroy -auto-approve -var="gcp_project_id=${{ env.GOOGLE_PROJECT }}" -var="gcp_region=us-central1"

- name: Send log to Fluent Bit (GitHub Actions)
  if: always()
  env:
    FLUENT_BIT_URL: ${{ secrets.FLUENT_BIT_URL }}         # ex: https://vps:9880/<endpoint>
    FLUENT_BIT_AUTH_BA: ${{ secrets.FLUENT_BIT_AUTH_BA }} # Basic base64
  run: |
    REPO="${GITHUB_REPOSITORY}"                  # owner/name
    WORKFLOW="${GITHUB_WORKFLOW}"
    JOB="${GITHUB_JOB}"
    BRANCH="${GITHUB_REF_NAME}"
    SHA="${GITHUB_SHA}"
    RUN_ID="${GITHUB_RUN_ID}"
    STATUS="${{ job.status }}"                   # success|failure|cancelled
    TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

    # tipo_erro: heurística simples pelo nome do job ou step (ajuste se quiser)
    TIPO_ERRO=$( [ "$STATUS" = "failure" ] && echo "BUILD" || echo "INFO" )

    # stack_hash: repo|workflow|job|status|sha[:8]
    BASE="${REPO}|${WORKFLOW}|${JOB}|${STATUS}|${SHA:0:8}"
    STACK_HASH=$(printf "%s" "$BASE" | shasum -a 256 | awk '{print $1}')

    curl --location "$FLUENT_BIT_URL" \
      --header 'Content-Type: application/json' \
      --header "Authorization: Basic $FLUENT_BIT_AUTH_BA" \
      --data "{
        \"service\": \"github-actions\",
        \"repo\": \"${REPO}\",
        \"workflow\": \"${WORKFLOW}\",
        \"job\": \"${JOB}\",
        \"status\": \"${STATUS}\",
        \"branch\": \"${BRANCH}\",
        \"autor\": \"${GITHUB_ACTOR}\",
        \"git_sha\": \"${SHA}\",
        \"run_id\": \"${RUN_ID}\",
        \"mensagem_curta\": \"Execução ${STATUS} em ${WORKFLOW}/${JOB}\",
        \"tipo_erro\": \"${TIPO_ERRO}\",
        \"stack_hash\": \"${STACK_HASH}\",
        \"timestamp\": \"${TS}\"
      }"

