name: Terraform Network Provisioning

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Escolha a ação a ser executada: apply ou destroy"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: Terraform Network
    runs-on: ubuntu-latest

    env:
      TF_WORKING_DIR: backstage/azure/vnet

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Inicializar Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform init

      - name: Validar configuração Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform validate

      - name: Aplicar recursos Terraform
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          terraform apply \
            -var="azure_client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="azure_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var="azure_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var="azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -auto-approve

      - name: Destruir recursos Terraform
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          terraform destroy \
            -var="azure_client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="azure_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var="azure_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var="azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -auto-approve
